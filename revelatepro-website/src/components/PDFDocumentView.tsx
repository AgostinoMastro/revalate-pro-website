import type React from 'react'
import { FileText, Building, Calendar, DollarSign, Target, Users, CheckCircle, TrendingUp, BarChart3 } from 'lucide-react'

interface PDFDocumentViewProps {
  demoType?: string
  className?: string
}

interface DocumentData {
  title: string
  subtitle: string
  headerInfo: {
    projectName: string
    client: string
    date: string
    preparedBy: string
  }
  summary: {
    totalAmount: string
    timeline: string
    winProbability?: string
    accuracy?: string
    scope: string
  }
  sections: Array<{
    title: string
    content: Array<{
      label: string
      value: string
      highlight?: boolean
    }>
  }>
  breakdown: Array<{
    category: string
    amount: string
    percentage: string
  }>
  recommendations: string[]
  footer: {
    nextSteps: string[]
    contact: string
  }
}

const getDocumentData = (demoType: string): DocumentData => {
  switch (demoType) {
    case 'bid-generation':
    case 'bidding-stress':
      return {
        title: 'COMMERCIAL OFFICE RENOVATION',
        subtitle: 'Comprehensive Bid Proposal',
        headerInfo: {
          projectName: 'Downtown Office Complex Renovation',
          client: 'Metro Properties LLC',
          date: new Date().toLocaleDateString('en-US', { year: 'numeric', month: 'long', day: 'numeric' }),
          preparedBy: 'RevalatePro AI Bid Management System'
        },
        summary: {
          totalAmount: '$2,847,500',
          timeline: '16 weeks',
          winProbability: '78%',
          scope: '25,000 sq ft office renovation'
        },
        sections: [
          {
            title: 'Project Overview',
            content: [
              { label: 'Property Type', value: 'Commercial Office Building' },
              { label: 'Total Area', value: '25,000 square feet' },
              { label: 'Floors', value: '3 floors + basement' },
              { label: 'Renovation Scope', value: 'Full interior renovation with modern finishes' },
              { label: 'Building Age', value: '1987 (37 years old)' },
              { label: 'Occupancy', value: 'Vacant during construction' }
            ]
          },
          {
            title: 'Competitive Analysis',
            content: [
              { label: 'Market Position', value: '5% below average competitor pricing', highlight: true },
              { label: 'Competitors Analyzed', value: '12 qualified contractors' },
              { label: 'Average Bid Range', value: '$2.9M - $3.2M' },
              { label: 'Our Competitive Edge', value: 'Sustainable materials expertise', highlight: true },
              { label: 'Risk Assessment', value: 'Low risk - established relationship' }
            ]
          }
        ],
        breakdown: [
          { category: 'Materials & Finishes', amount: '$1,425,000', percentage: '50%' },
          { category: 'Labor & Installation', amount: '$987,500', percentage: '35%' },
          { category: 'Project Management', amount: '$199,000', percentage: '7%' },
          { category: 'Permits & Fees', amount: '$101,000', percentage: '4%' },
          { category: 'Contingency', amount: '$135,000', percentage: '4%' }
        ],
        recommendations: [
          'Highlight our 15-year experience with similar office renovations',
          'Emphasize LEED certification capabilities for sustainability bonus',
          'Propose value engineering options to optimize budget allocation',
          'Include 2-year warranty on all workmanship and materials'
        ],
        footer: {
          nextSteps: [
            'Submit proposal by March 28th deadline',
            'Schedule site visit with client by March 25th',
            'Prepare detailed timeline and milestone schedule',
            'Coordinate with subcontractors for availability confirmation'
          ],
          contact: 'Generated by RevalatePro AI • Contact: info@revelatepro.com'
        }
      }

    case 'estimating':
    case 'estimation-guesswork':
      return {
        title: 'RESIDENTIAL CONSTRUCTION',
        subtitle: 'Detailed Cost Estimate Report',
        headerInfo: {
          projectName: 'Custom Home Construction - Westside',
          client: 'Johnson Family Residence',
          date: new Date().toLocaleDateString('en-US', { year: 'numeric', month: 'long', day: 'numeric' }),
          preparedBy: 'RevalatePro AI Estimating System'
        },
        summary: {
          totalAmount: '$1,247,850',
          timeline: '8 months',
          accuracy: '95%+ accuracy',
          scope: '3,200 sq ft custom home'
        },
        sections: [
          {
            title: 'Property Specifications',
            content: [
              { label: 'Home Style', value: 'Contemporary Single-Family' },
              { label: 'Total Living Area', value: '3,200 square feet' },
              { label: 'Bedrooms', value: '4 bedrooms + office' },
              { label: 'Bathrooms', value: '3.5 bathrooms' },
              { label: 'Foundation', value: 'Concrete slab with partial basement' },
              { label: 'Lot Size', value: '0.75 acres' }
            ]
          },
          {
            title: 'Market Analysis',
            content: [
              { label: 'Cost per sq ft', value: '$389.95/sq ft', highlight: true },
              { label: 'Market Rate Range', value: '$350-$425/sq ft' },
              { label: 'Material Pricing', value: 'Current Q1 2024 rates applied' },
              { label: 'Labor Availability', value: 'Good - 2 week lead time' },
              { label: 'Permit Timeline', value: '4-6 weeks estimated' }
            ]
          }
        ],
        breakdown: [
          { category: 'Foundation & Concrete', amount: '$142,500', percentage: '11%' },
          { category: 'Framing & Structural', amount: '$189,200', percentage: '15%' },
          { category: 'Electrical & Plumbing', amount: '$167,800', percentage: '13%' },
          { category: 'HVAC System', amount: '$89,400', percentage: '7%' },
          { category: 'Finishes & Fixtures', amount: '$298,750', percentage: '24%' },
          { category: 'Roofing & Exterior', amount: '$156,300', percentage: '13%' },
          { category: 'Labor & Installation', amount: '$203,900', percentage: '17%' }
        ],
        recommendations: [
          'Lock in material pricing for next 90 days to avoid market fluctuations',
          'Consider value engineering on interior finishes to reduce costs by 8-12%',
          'Schedule foundation work for spring to avoid weather delays',
          'Pre-order long-lead items like windows and appliances immediately'
        ],
        footer: {
          nextSteps: [
            'Review estimate with client and finalize specifications',
            'Submit permit applications within 2 weeks',
            'Secure material supplier agreements and pricing locks',
            'Schedule pre-construction meeting with all trades'
          ],
          contact: 'Generated by RevalatePro AI • Contact: info@revelatepro.com'
        }
      }

    case 'expense':
    case 'financial-chaos':
      return {
        title: 'PROJECT FINANCIAL REPORT',
        subtitle: 'Expense Tracking & Budget Analysis',
        headerInfo: {
          projectName: 'Riverside Office Construction - Phase 2',
          client: 'Metro Development Corp',
          date: new Date().toLocaleDateString('en-US', { year: 'numeric', month: 'long', day: 'numeric' }),
          preparedBy: 'RevalatePro AI Financial System'
        },
        summary: {
          totalAmount: '$2,847,328',
          timeline: '73% complete',
          accuracy: '99% processing accuracy',
          scope: 'Electrical & HVAC installation phase'
        },
        sections: [
          {
            title: 'Budget Status Overview',
            content: [
              { label: 'Total Project Budget', value: '$3,900,000' },
              { label: 'Spent to Date', value: '$2,847,328' },
              { label: 'Remaining Budget', value: '$1,052,672' },
              { label: 'Budget Utilization', value: '73% - On Track', highlight: true },
              { label: 'Projected Final Cost', value: '$3,825,000' },
              { label: 'Estimated Savings', value: '$75,000 under budget', highlight: true }
            ]
          },
          {
            title: 'Recent Expense Analysis',
            content: [
              { label: 'Last Receipt Processed', value: 'Home Depot - $2,847.32' },
              { label: 'Processing Time', value: '1.2 seconds automated' },
              { label: 'Category Assignment', value: 'Electrical Materials - Project #4821' },
              { label: 'Vendor Verification', value: 'Approved supplier - verified' },
              { label: 'Tax Compliance', value: 'Sales tax calculated: $234.56' }
            ]
          }
        ],
        breakdown: [
          { category: 'Electrical Materials', amount: '$847,230', percentage: '30%' },
          { category: 'HVAC Equipment', amount: '$623,450', percentage: '22%' },
          { category: 'Labor Costs', amount: '$592,120', percentage: '21%' },
          { category: 'Plumbing Fixtures', amount: '$341,280', percentage: '12%' },
          { category: 'General Materials', amount: '$267,890', percentage: '9%' },
          { category: 'Equipment Rental', amount: '$175,358', percentage: '6%' }
        ],
        recommendations: [
          'Electrical budget tracking shows 73% utilization - within normal range',
          'Recommend negotiating bulk discount for remaining HVAC materials',
          'Set up automated alerts for expenses over $5,000 requiring approval',
          'Continue weekly budget review meetings to maintain cost control'
        ],
        footer: {
          nextSteps: [
            'Generate weekly expense report for project stakeholders',
            'Review and approve pending expenses totaling $23,450',
            'Update budget forecasts based on current spending trends',
            'Schedule mid-project financial review with client'
          ],
          contact: 'Generated by RevalatePro AI • Contact: info@revelatepro.com'
        }
      }

    default:
      return getDocumentData('bid-generation')
  }
}

export const PDFDocumentView: React.FC<PDFDocumentViewProps> = ({
  demoType = 'bid-generation',
  className = ''
}) => {
  const doc = getDocumentData(demoType)

  return (
    <div className={`bg-white text-black font-sans max-w-4xl mx-auto shadow-2xl ${className}`}>
      {/* Document Header */}
      <div className="p-8 border-b-2 border-gray-200">
        <div className="flex items-center mb-6">
          <div className="w-12 h-12 bg-blue-600 rounded-lg flex items-center justify-center mr-4">
            <FileText className="w-7 h-7 text-white" />
          </div>
          <div>
            <h1 className="text-2xl font-bold text-gray-900">{doc.title}</h1>
            <p className="text-lg text-gray-600">{doc.subtitle}</p>
          </div>
        </div>

        {/* Header Info Grid */}
        <div className="grid grid-cols-1 md:grid-cols-2 gap-6 bg-gray-50 p-6 rounded-lg">
          <div>
            <h3 className="font-semibold text-gray-700 mb-3">Project Information</h3>
            <div className="space-y-2 text-sm">
              <div><span className="text-gray-600">Project:</span> <span className="font-medium">{doc.headerInfo.projectName}</span></div>
              <div><span className="text-gray-600">Client:</span> <span className="font-medium">{doc.headerInfo.client}</span></div>
              <div><span className="text-gray-600">Date:</span> <span className="font-medium">{doc.headerInfo.date}</span></div>
            </div>
          </div>
          <div>
            <h3 className="font-semibold text-gray-700 mb-3">Document Details</h3>
            <div className="space-y-2 text-sm">
              <div><span className="text-gray-600">Prepared by:</span> <span className="font-medium">{doc.headerInfo.preparedBy}</span></div>
              <div><span className="text-gray-600">Document ID:</span> <span className="font-medium">REV-{Date.now().toString().slice(-6)}</span></div>
              <div><span className="text-gray-600">Status:</span> <span className="font-medium text-green-600">Final</span></div>
            </div>
          </div>
        </div>
      </div>

      {/* Executive Summary */}
      <div className="p-8 border-b border-gray-200">
        <h2 className="text-xl font-bold mb-6 flex items-center">
          <Target className="w-6 h-6 mr-2 text-blue-600" />
          Executive Summary
        </h2>

        <div className="bg-gradient-to-r from-green-50 to-blue-50 p-6 rounded-lg border-l-4 border-green-500 mb-6">
          <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6">
            <div className="text-center">
              <div className="text-3xl font-bold text-green-600 mb-1">{doc.summary.totalAmount}</div>
              <div className="text-sm text-gray-600">Total Amount</div>
            </div>
            <div className="text-center">
              <div className="text-3xl font-bold text-blue-600 mb-1">{doc.summary.timeline}</div>
              <div className="text-sm text-gray-600">Timeline</div>
            </div>
            {doc.summary.winProbability && (
              <div className="text-center">
                <div className="text-3xl font-bold text-purple-600 mb-1">{doc.summary.winProbability}</div>
                <div className="text-sm text-gray-600">Win Probability</div>
              </div>
            )}
            {doc.summary.accuracy && (
              <div className="text-center">
                <div className="text-3xl font-bold text-purple-600 mb-1">{doc.summary.accuracy}</div>
                <div className="text-sm text-gray-600">Accuracy</div>
              </div>
            )}
          </div>
          <div className="mt-4 text-center">
            <div className="text-lg font-semibold text-gray-700">{doc.summary.scope}</div>
          </div>
        </div>
      </div>

      {/* Detailed Sections */}
      {doc.sections.map((section, index) => (
        <div key={section.title} className="p-8 border-b border-gray-200">
          <h2 className="text-xl font-bold mb-6 flex items-center">
            <Building className="w-6 h-6 mr-2 text-blue-600" />
            {section.title}
          </h2>

          <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
            {section.content.map((item, itemIndex) => (
              <div key={`${section.title}-${item.label}-${itemIndex}`} className={`p-4 rounded-lg ${item.highlight ? 'bg-yellow-50 border-l-4 border-yellow-400' : 'bg-gray-50'}`}>
                <div className="text-sm font-semibold text-gray-700 mb-1">{item.label}</div>
                <div className={`text-lg ${item.highlight ? 'font-bold text-yellow-700' : 'font-medium text-gray-900'}`}>
                  {item.value}
                </div>
              </div>
            ))}
          </div>
        </div>
      ))}

      {/* Cost Breakdown */}
      <div className="p-8 border-b border-gray-200">
        <h2 className="text-xl font-bold mb-6 flex items-center">
          <BarChart3 className="w-6 h-6 mr-2 text-blue-600" />
          Cost Breakdown
        </h2>

        <div className="space-y-4">
          {doc.breakdown.map((item, index) => (
            <div key={`breakdown-${item.category}-${index}`} className="flex items-center justify-between p-4 bg-gray-50 rounded-lg">
              <div className="flex-1">
                <div className="font-semibold text-gray-900">{item.category}</div>
                <div className="text-sm text-gray-600">{item.percentage} of total budget</div>
              </div>
              <div className="text-right">
                <div className="text-xl font-bold text-green-600">{item.amount}</div>
              </div>
              <div className="ml-4 w-20">
                <div className="w-full bg-gray-200 rounded-full h-2">
                  <div
                    className="bg-gradient-to-r from-blue-500 to-green-500 h-2 rounded-full"
                    style={{ width: item.percentage }}
                  />
                </div>
              </div>
            </div>
          ))}
        </div>
      </div>

      {/* Recommendations */}
      <div className="p-8 border-b border-gray-200">
        <h2 className="text-xl font-bold mb-6 flex items-center">
          <TrendingUp className="w-6 h-6 mr-2 text-blue-600" />
          AI Recommendations
        </h2>

        <div className="space-y-4">
          {doc.recommendations.map((rec, index) => (
            <div key={`recommendation-${index}-${rec.slice(0, 20)}`} className="flex items-start p-4 bg-blue-50 rounded-lg border-l-4 border-blue-400">
              <CheckCircle className="w-5 h-5 text-blue-600 mr-3 mt-0.5 flex-shrink-0" />
              <div className="text-gray-700 leading-relaxed">{rec}</div>
            </div>
          ))}
        </div>
      </div>

      {/* Next Steps & Footer */}
      <div className="p-8">
        <h2 className="text-xl font-bold mb-6 flex items-center">
          <Calendar className="w-6 h-6 mr-2 text-blue-600" />
          Next Steps
        </h2>

        <div className="space-y-3 mb-8">
          {doc.footer.nextSteps.map((step, index) => (
            <div key={`next-step-${index}-${step.slice(0, 20)}`} className="flex items-center p-3 bg-gray-50 rounded-lg">
              <div className="w-8 h-8 bg-blue-600 text-white rounded-full flex items-center justify-center text-sm font-bold mr-3">
                {index + 1}
              </div>
              <div className="text-gray-700">{step}</div>
            </div>
          ))}
        </div>

        {/* Footer */}
        <div className="border-t pt-6 text-center text-sm text-gray-500">
          <p>{doc.footer.contact}</p>
          <p className="mt-2">This document was generated automatically using artificial intelligence. All calculations and recommendations are based on current market data and historical project analysis.</p>
        </div>
      </div>
    </div>
  )
}

export default PDFDocumentView
